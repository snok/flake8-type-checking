name: test

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: snok/.github/workflows/linting@main
  test:
    # ---------------------------------------------------
    #    Documentation and examples can be found at
    #      https://github.com/snok/install-poetry
    # ---------------------------------------------------
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10.0-rc.1" ]
        flake8-version: [ "1", "2", "3" ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          # This path assumes the workflow is run on an ubuntu runner
          path: ~/.local
          key: key-0
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.0a2
          virtualenvs-in-project: true
      - name: Load cached venv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-4
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - run: pip install flake8==${{ matrix.flake8-version }}
      - name: Install package
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          source .venv/bin/activate
          poetry run pytest --cov=flake8_type_checking --verbose --assert=plain
          poetry run coverage report
